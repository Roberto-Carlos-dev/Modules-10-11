{"version":3,"file":"index.js","sources":["../src/js/main.js"],"sourcesContent":["/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\n// 1. Імпортую потрібні функції та змінні\nimport { renderTask, renderAllTasks } from './render-tasks.js';// функції для відображення завдань\nimport { saveTasks, loadTasksFromStorage } from './local-storage-api.js';// для збереження і завантаження з localStorage\nimport { createTask, addTask, deleteTask, tasks } from './tasks.js';// логіка для створення/додавання/видалення задач\nimport { refs } from './refs.js';// збережені посилання на DOM-елементи\nimport { initThemeToggle } from './theme-switcher.js';// перемикач теми (світла/темна)\n\n// 2. Асинхронна функція для завантаження HTML-частин (partials) з папки partials\nasync function loadPartials() {\n  try {\n    const headerRes = await fetch('./partials/header.html'); // завантажуємо header.html\n    const headerHtml = await headerRes.text(); // читаємо як текст\n    document.getElementById('header-placeholder').innerHTML = headerHtml; // вставляємо у DOM\n\n    const tasksRes = await fetch('./partials/tasks-list.html'); // завантажуємо tasks-list.html\n    const tasksHtml = await tasksRes.text(); // читаємо як текст\n    document.getElementById('tasks-placeholder').innerHTML = tasksHtml; // вставляємо у DOM\n  } catch (err) {\n    console.error('Помилка завантаження partials:', err); // обробка помилки завантаження\n  }\n}\n\n// 3. Обробник події submit форми для додавання завдання\nfunction onFormSubmit(e) {\n  e.preventDefault(); // скасування стандартної поведінки\n  const title = refs.titleInput.value.trim(); // отримуюю заголовок\n  const description = refs.bodyInput.value.trim(); // отримую опис\n\n  if (!title || !description) return; // якщо пусто — нічого не роблю\n\n  const task = createTask(title, description); // створюю об'єкт завдання\n  addTask(task); // додаю до масиву tasks\n  renderTask(task); // відображаю завдання в DOM\n  saveTasks(tasks); // зберігаю tasks у localStorage\n\n  refs.form.reset(); // очищаю форму після додавання\n}\n\n// 4. Обробник кліків для видалення завдання\nfunction onTaskListClick(e) {\n  if (!e.target.classList.contains('task-list-item-btn')) return; // перевіряємо чи клік був по кнопці Delete\n  const item = e.target.closest('li'); // знаходимо батьківський <li>\n  const id = item.dataset.id; // зчитуємо id із data-атрибута\n  deleteTask(id); // видаляємо завдання з масиву\n  saveTasks(tasks); // оновлюємо localStorage\n  item.remove(); // видаляємо з DOM\n}\n\n// 5. Ініціалізація застосунку після вставлення HTML-розмітки\nloadPartials().then(() => {\n  refs.form = document.querySelector('#task-form');\n  refs.titleInput = document.querySelector('input[name=\"taskName\"]');\n  refs.bodyInput = document.querySelector('input[name=\"taskDescription\"]');\n  refs.taskList = document.querySelector('#task-list');; // ініціалізую перемикач теми\n});"],"names":["loadPartials","headerHtml","tasksHtml","err"],"mappings":"ssBAyBA,eAAeA,GAAe,CAC5B,GAAI,CAEF,MAAMC,EAAa,MADD,MAAM,MAAM,wBAAwB,GACnB,OACnC,SAAS,eAAe,oBAAoB,EAAE,UAAYA,EAG1D,MAAMC,EAAY,MADD,MAAM,MAAM,4BAA4B,GACxB,OACjC,SAAS,eAAe,mBAAmB,EAAE,UAAYA,CAC1D,OAAQC,EAAK,CACZ,QAAQ,MAAM,iCAAkCA,CAAG,CACpD,CACH,CA6BAH,EAAc,EAAC,KAAK,IAAM,CACZ,SAAS,cAAc,YAAY,EAC7B,SAAS,cAAc,wBAAwB,EAChD,SAAS,cAAc,+BAA+B,EACvD,SAAS,cAAc,YAAY,CACrD,CAAC"}